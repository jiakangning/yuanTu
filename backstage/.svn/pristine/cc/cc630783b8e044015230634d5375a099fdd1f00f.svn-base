const Sequelize = require('sequelize')
const dbCtx = require('../../../database/dbCtx')
const { phoneNum } = require('../../util/validator.regex')
const bcrypt = require('bcryptjs')

const User = dbCtx.define('user', {
  name: {
    type: Sequelize.STRING,
    unique: true,
    allowNull: false
  },
  password: {
    type: Sequelize.STRING,
    allowNull: false
  },
  email: {
    type: Sequelize.STRING,
    unique: true,
    validate: {
      isEmail: true
    }
  },
  mobile: {
    type: Sequelize.STRING,
    unique: true,
    validate: {
      is: phoneNum
    }
  }
}, {
  timestamps: true,
  paranoid: true,
  underscored: true
})

User.beforeSave((user, options) => {
  if (user.changed('password')) {
    return bcrypt.hash(user.password, 12)
      .then(hashedPwd => {
        user.password = hashedPwd
      })
  }
})

User.prototype.comparePassword = function (password) {
  return bcrypt.compareSync(password, this.password)
}

module.exports = User
